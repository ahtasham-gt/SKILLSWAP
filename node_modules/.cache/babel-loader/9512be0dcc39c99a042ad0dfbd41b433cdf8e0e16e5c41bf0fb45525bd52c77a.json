{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  sidebarOpen: false,\n  modals: {\n    login: false,\n    addSkill: false,\n    swapRequest: false,\n    profile: false\n  },\n  notifications: [],\n  theme: 'light',\n  loading: false\n};\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleSidebar: state => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    openModal: (state, action) => {\n      const modalName = action.payload;\n      state.modals[modalName] = true;\n    },\n    closeModal: (state, action) => {\n      const modalName = action.payload;\n      state.modals[modalName] = false;\n    },\n    closeAllModals: state => {\n      Object.keys(state.modals).forEach(key => {\n        state.modals[key] = false;\n      });\n    },\n    addNotification: (state, action) => {\n      const notification = {\n        id: Date.now().toString(),\n        ...action.payload,\n        timestamp: new Date().toISOString()\n      };\n      state.notifications.push(notification);\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(notification => notification.id !== action.payload);\n    },\n    clearNotifications: state => {\n      state.notifications = [];\n    },\n    toggleTheme: state => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    }\n  }\n});\nexport const {\n  toggleSidebar,\n  openModal,\n  closeModal,\n  closeAllModals,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  toggleTheme,\n  setLoading\n} = uiSlice.actions;\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","sidebarOpen","modals","login","addSkill","swapRequest","profile","notifications","theme","loading","uiSlice","name","reducers","toggleSidebar","state","openModal","action","modalName","payload","closeModal","closeAllModals","Object","keys","forEach","key","addNotification","notification","id","Date","now","toString","timestamp","toISOString","push","removeNotification","filter","clearNotifications","toggleTheme","setLoading","actions","reducer"],"sources":["D:/projects/skillswap/src/store/slices/uiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  sidebarOpen: false,\r\n  modals: {\r\n    login: false,\r\n    addSkill: false,\r\n    swapRequest: false,\r\n    profile: false\r\n  },\r\n  notifications: [],\r\n  theme: 'light',\r\n  loading: false\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  reducers: {\r\n    toggleSidebar: (state) => {\r\n      state.sidebarOpen = !state.sidebarOpen;\r\n    },\r\n    openModal: (state, action) => {\r\n      const modalName = action.payload;\r\n      state.modals[modalName] = true;\r\n    },\r\n    closeModal: (state, action) => {\r\n      const modalName = action.payload;\r\n      state.modals[modalName] = false;\r\n    },\r\n    closeAllModals: (state) => {\r\n      Object.keys(state.modals).forEach(key => {\r\n        state.modals[key] = false;\r\n      });\r\n    },\r\n    addNotification: (state, action) => {\r\n      const notification = {\r\n        id: Date.now().toString(),\r\n        ...action.payload,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      state.notifications.push(notification);\r\n    },\r\n    removeNotification: (state, action) => {\r\n      state.notifications = state.notifications.filter(\r\n        notification => notification.id !== action.payload\r\n      );\r\n    },\r\n    clearNotifications: (state) => {\r\n      state.notifications = [];\r\n    },\r\n    toggleTheme: (state) => {\r\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  toggleSidebar,\r\n  openModal,\r\n  closeModal,\r\n  closeAllModals,\r\n  addNotification,\r\n  removeNotification,\r\n  clearNotifications,\r\n  toggleTheme,\r\n  setLoading\r\n} = uiSlice.actions;\r\n\r\nexport default uiSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,KAAK;EAClBC,MAAM,EAAE;IACNC,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE,KAAK;IACfC,WAAW,EAAE,KAAK;IAClBC,OAAO,EAAE;EACX,CAAC;EACDC,aAAa,EAAE,EAAE;EACjBC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,OAAO,GAAGX,WAAW,CAAC;EAC1BY,IAAI,EAAE,IAAI;EACVX,YAAY;EACZY,QAAQ,EAAE;IACRC,aAAa,EAAGC,KAAK,IAAK;MACxBA,KAAK,CAACb,WAAW,GAAG,CAACa,KAAK,CAACb,WAAW;IACxC,CAAC;IACDc,SAAS,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC5B,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAO;MAChCJ,KAAK,CAACZ,MAAM,CAACe,SAAS,CAAC,GAAG,IAAI;IAChC,CAAC;IACDE,UAAU,EAAEA,CAACL,KAAK,EAAEE,MAAM,KAAK;MAC7B,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAO;MAChCJ,KAAK,CAACZ,MAAM,CAACe,SAAS,CAAC,GAAG,KAAK;IACjC,CAAC;IACDG,cAAc,EAAGN,KAAK,IAAK;MACzBO,MAAM,CAACC,IAAI,CAACR,KAAK,CAACZ,MAAM,CAAC,CAACqB,OAAO,CAACC,GAAG,IAAI;QACvCV,KAAK,CAACZ,MAAM,CAACsB,GAAG,CAAC,GAAG,KAAK;MAC3B,CAAC,CAAC;IACJ,CAAC;IACDC,eAAe,EAAEA,CAACX,KAAK,EAAEE,MAAM,KAAK;MAClC,MAAMU,YAAY,GAAG;QACnBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzB,GAAGd,MAAM,CAACE,OAAO;QACjBa,SAAS,EAAE,IAAIH,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC;MACpC,CAAC;MACDlB,KAAK,CAACP,aAAa,CAAC0B,IAAI,CAACP,YAAY,CAAC;IACxC,CAAC;IACDQ,kBAAkB,EAAEA,CAACpB,KAAK,EAAEE,MAAM,KAAK;MACrCF,KAAK,CAACP,aAAa,GAAGO,KAAK,CAACP,aAAa,CAAC4B,MAAM,CAC9CT,YAAY,IAAIA,YAAY,CAACC,EAAE,KAAKX,MAAM,CAACE,OAC7C,CAAC;IACH,CAAC;IACDkB,kBAAkB,EAAGtB,KAAK,IAAK;MAC7BA,KAAK,CAACP,aAAa,GAAG,EAAE;IAC1B,CAAC;IACD8B,WAAW,EAAGvB,KAAK,IAAK;MACtBA,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAC1D,CAAC;IACD8B,UAAU,EAAEA,CAACxB,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACL,OAAO,GAAGO,MAAM,CAACE,OAAO;IAChC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXL,aAAa;EACbE,SAAS;EACTI,UAAU;EACVC,cAAc;EACdK,eAAe;EACfS,kBAAkB;EAClBE,kBAAkB;EAClBC,WAAW;EACXC;AACF,CAAC,GAAG5B,OAAO,CAAC6B,OAAO;AAEnB,eAAe7B,OAAO,CAAC8B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}