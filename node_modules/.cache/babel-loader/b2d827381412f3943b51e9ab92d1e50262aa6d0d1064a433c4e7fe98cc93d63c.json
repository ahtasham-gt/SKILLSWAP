{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunks for API calls\nexport const loginUser = createAsyncThunk('auth/loginUser', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Mock user data\n    const user = {\n      id: '1',\n      name: credentials.email.split('@')[0],\n      email: credentials.email,\n      avatar: `https://ui-avatars.com/api/?name=${credentials.email.split('@')[0]}&background=6366f1&color=fff`,\n      skills: ['JavaScript', 'React', 'CSS'],\n      location: 'New York, NY',\n      bio: 'Passionate developer looking to learn and share skills!'\n    };\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const logoutUser = createAsyncThunk('auth/logoutUser', async () => {\n  localStorage.removeItem('user');\n  return null;\n});\nexport const updateProfile = createAsyncThunk('auth/updateProfile', async (profileData, {\n  getState\n}) => {\n  try {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const currentUser = getState().auth.user;\n    const updatedUser = {\n      ...currentUser,\n      ...profileData\n    };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    return updatedUser;\n  } catch (error) {\n    throw error;\n  }\n});\nconst initialState = {\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  isAuthenticated: !!localStorage.getItem('user'),\n  loading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n      state.isAuthenticated = !!action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      state.isAuthenticated = true;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n    // Logout\n    .addCase(logoutUser.fulfilled, state => {\n      state.user = null;\n      state.isAuthenticated = false;\n    })\n    // Update Profile\n    .addCase(updateProfile.pending, state => {\n      state.loading = true;\n    }).addCase(updateProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n    }).addCase(updateProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {\n  clearError,\n  setUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","loginUser","credentials","rejectWithValue","Promise","resolve","setTimeout","user","id","name","email","split","avatar","skills","location","bio","localStorage","setItem","JSON","stringify","error","message","logoutUser","removeItem","updateProfile","profileData","getState","currentUser","auth","updatedUser","initialState","parse","getItem","isAuthenticated","loading","authSlice","reducers","clearError","state","setUser","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["D:/projects/skillswap/src/store/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\n// Async thunks for API calls\r\nexport const loginUser = createAsyncThunk(\r\n  'auth/loginUser',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock user data\r\n      const user = {\r\n        id: '1',\r\n        name: credentials.email.split('@')[0],\r\n        email: credentials.email,\r\n        avatar: `https://ui-avatars.com/api/?name=${credentials.email.split('@')[0]}&background=6366f1&color=fff`,\r\n        skills: ['JavaScript', 'React', 'CSS'],\r\n        location: 'New York, NY',\r\n        bio: 'Passionate developer looking to learn and share skills!'\r\n      };\r\n      \r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      return user;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logoutUser = createAsyncThunk(\r\n  'auth/logoutUser',\r\n  async () => {\r\n    localStorage.removeItem('user');\r\n    return null;\r\n  }\r\n);\r\n\r\nexport const updateProfile = createAsyncThunk(\r\n  'auth/updateProfile',\r\n  async (profileData, { getState }) => {\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      const currentUser = getState().auth.user;\r\n      const updatedUser = { ...currentUser, ...profileData };\r\n      \r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      return updatedUser;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  user: JSON.parse(localStorage.getItem('user')) || null,\r\n  isAuthenticated: !!localStorage.getItem('user'),\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    },\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = !!action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Login\r\n      .addCase(loginUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      // Logout\r\n      .addCase(logoutUser.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.isAuthenticated = false;\r\n      })\r\n      // Update Profile\r\n      .addCase(updateProfile.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(updateProfile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(updateProfile.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearError, setUser } = authSlice.actions;\r\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}